% layout 'default';
%= include 'navbar';

<style>
.rect {
  fill: steelblue;
}

.chart text {
  fill: white;
  font: 10px sans-serif;
  text-anchor: end;
}


.white {
  font: 32px monospace;
  fill: white;
}

.enter {
  fill: green;
}

.update {
  fill: steelblue;
}

</style>

<div class='container-fluid'>
<div id='stuff'></div>
<div id='process'>number here</div>
</div>

%= javascript begin

var process = new EventSource('<%= url_for 'seq' %>');

process.addEventListener('seq',function(event) {
    console.log('event ' + event.data);
    $('#process').html(event.data);
    update(event.data);
}, false);

var width = 1200, height = 500;

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height)
  .append("g");


function update(data) {

  // DATA JOIN
  // Join new data with old elements, if any.
  var rect = svg.selectAll("rect")
      .data(data);

  // UPDATE
  // Update old elements as needed.
  rect.attr("class", "update");

  // ENTER
  // Create new elements as needed.
  rect.enter().append("rect")
      .attr("class", "enter")
      .attr("width", '30' )
      .attr("height", "40")
      .attr("transform", function(d) { return 'translate(' + d*40 + ',50)' })
      .append('text').attr('class','white').text('x');

  // ENTER + UPDATE
  // Appending to the enter selection expands the update selection to include
  // entering elements; so, operations on the update selection after appending to
  // the enter selection will apply to both entering and updating nodes.
  // rect.text(function(d) { return 'hi' + d; });

  // EXIT
  // Remove old elements as needed.
  rect.exit().remove();
}


%= end



